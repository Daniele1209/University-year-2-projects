 ID: 
1
Stack: 
for(v = 0 ; v < 10 ; v = v + 1) print(v));
print(v)
integer v

Sym table: 

Heap: 

File table: 

Output: 


ID: 
1
Stack: 
for(v = 0 ; v < 10 ; v = v + 1) print(v));
print(v)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
for(v = 0 ; v < 10 ; v = v + 1) print(v))

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
v = 0;
while (v < 10) print(v);
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = 0

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 3 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-4 
Heap: 

File table: 

Output: 
0 1 2 3 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-4 
Heap: 

File table: 

Output: 
0 1 2 3 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-4 
Heap: 

File table: 

Output: 
0 1 2 3 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-4 
Heap: 

File table: 

Output: 
0 1 2 3 4 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-5 
Heap: 

File table: 

Output: 
0 1 2 3 4 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-5 
Heap: 

File table: 

Output: 
0 1 2 3 4 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-5 
Heap: 

File table: 

Output: 
0 1 2 3 4 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-5 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-6 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-6 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-6 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-6 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-7 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-7 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-7 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-7 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-8 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-8 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-8 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-8 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-9 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
print(v);
v = v + 1

Sym table: 
v-9 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1
print(v)

Sym table: 
v-9 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1
v = v + 1

Sym table: 
v-9 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 9 

ID: 
1
Stack: 
print(v)
while (v < 10) print(v);
v = v + 1

Sym table: 
v-10 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 9 

ID: 
1
Stack: 
print(v)

Sym table: 
v-10 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 9 

ID: 
1
Stack: 

Sym table: 
v-10 
Heap: 

File table: 

Output: 
0 1 2 3 4 5 6 7 8 9 10 

