 ID: 
1
Stack: 
v = 0;
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 );
print(v * 10)
integer v

Sym table: 

Heap: 

File table: 

Output: 


ID: 
1
Stack: 
v = 0;
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 );
print(v * 10)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 );
print(v * 10)
v = 0

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 );
print(v * 10)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
fork (print(v);
v = v - 1);
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1
fork (print(v);
v = v - 1)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
2
Stack: 
print(v);
v = v - 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )

Sym table: 
v-1 
Heap: 

File table: 

Output: 


ID: 
2
Stack: 
v = v - 1
print(v)

Sym table: 
v-0 
Heap: 

File table: 

Output: 


ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
fork (print(v);
v = v - 1);
v = v + 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
2
Stack: 
v = v - 1

Sym table: 
v-0 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1
fork (print(v);
v = v - 1)

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
2
Stack: 

Sym table: 
v--1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
3
Stack: 
print(v);
v = v - 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 

ID: 
3
Stack: 
v = v - 1
print(v)

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
fork (print(v);
v = v - 1);
v = v + 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
3
Stack: 
v = v - 1

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1
fork (print(v);
v = v - 1)

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
3
Stack: 

Sym table: 
v-0 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )
v = v + 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
4
Stack: 
print(v);
v = v - 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v * 10)
do {
	fork (print(v);
v = v - 1);
v = v + 1
} while ( v == 3 )

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 

ID: 
4
Stack: 
v = v - 1
print(v)

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 

ID: 
1
Stack: 
print(v * 10)

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
4
Stack: 
v = v - 1

Sym table: 
v-2 
Heap: 

File table: 

Output: 
0 1 2 

ID: 
1
Stack: 

Sym table: 
v-3 
Heap: 

File table: 

Output: 
0 1 2 30 

ID: 
4
Stack: 

Sym table: 
v-1 
Heap: 

File table: 

Output: 
0 1 2 30 

