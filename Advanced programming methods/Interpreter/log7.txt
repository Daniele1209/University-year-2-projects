 ID: 
7
Stack: 
new (v , 20);
Ref (Ref (integer)) a;
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)
Ref (integer) v

Sym table: 

Heap: 

File table: 

Output: 


ID: 
7
Stack: 
new (v , 20);
Ref (Ref (integer)) a;
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)

Sym table: 
v-(0, integer) 
Heap: 

File table: 

Output: 


ID: 
7
Stack: 
Ref (Ref (integer)) a;
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)
new (v , 20)

Sym table: 
v-(0, integer) 
Heap: 

File table: 

Output: 


ID: 
7
Stack: 
Ref (Ref (integer)) a;
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)

Sym table: 
v-(1, integer) 
Heap: 
1-20 
File table: 

Output: 


ID: 
7
Stack: 
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)
Ref (Ref (integer)) a

Sym table: 
v-(1, integer) 
Heap: 
1-20 
File table: 

Output: 


ID: 
7
Stack: 
new (a , v);
print(rH (v));
print(rH (rH (a)) + 5)

Sym table: 
a-(0, Ref (integer)) v-(1, integer) 
Heap: 
1-20 
File table: 

Output: 


ID: 
7
Stack: 
print(rH (v));
print(rH (rH (a)) + 5)
new (a , v)

Sym table: 
a-(0, Ref (integer)) v-(1, integer) 
Heap: 
1-20 
File table: 

Output: 


ID: 
7
Stack: 
print(rH (v));
print(rH (rH (a)) + 5)

Sym table: 
a-(2, Ref (integer)) v-(1, integer) 
Heap: 
1-20 2-(1, integer) 
File table: 

Output: 


ID: 
7
Stack: 
print(rH (rH (a)) + 5)
print(rH (v))

Sym table: 
a-(2, Ref (integer)) v-(1, integer) 
Heap: 
1-20 2-(1, integer) 
File table: 

Output: 


ID: 
7
Stack: 
print(rH (rH (a)) + 5)

Sym table: 
a-(2, Ref (integer)) v-(1, integer) 
Heap: 
1-20 2-(1, integer) 
File table: 

Output: 
20 

ID: 
7
Stack: 

Sym table: 
a-(2, Ref (integer)) v-(1, integer) 
Heap: 
1-20 2-(1, integer) 
File table: 

Output: 
20 25 

